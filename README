# Master Thesis Github #


Tests are designed to be run on DAS-4 nodes.
Currently, I login to the head node, I start a screen session for each experiment, and in this session, I claim a node using:

`qrsh -l h_rt=1:00:00`

Afterwards, I go to the code folder (`cd code`).

To run a test, and check the resources used, I basically enter:
set the test and iteration ID:

`tst=graz01_bike;i=1`

run the experiment:

``/usr/bin/time -f "Time: %e\nCPU: %P\nmemory_max: %M\n" -o timing_$i.res python boiman.py $tst -d `eval date +%y%m%d_`$i``

## File description ##

**bmp2jpg.py**
Small script to convert a folder of bmp files to jpg files (needed because Koen van de Sande's colorDescriptor only seems to take jpgs, while graz01 has bmps only)

**boiman.py**
Main program with test classes and function
usage: `python boiman.py [-h] [-d ID] [-c CONFIGFILE] TEST`, where `TEST` can be either graz01\_person, graz01\_bike, *caltech101, pascal07*

**DescriptorIO.py**
Koen van de Sande's functions to interpret his Descriptor-files, is used in poiman.py and performance.py

**performance.py**
Functions to get the performance from results files, and to visualize examples

**README**
This file

**runflann.py**
*Deprecated* early attempt towards boiman.py

**settings.cfg**
Settings which are read by boiman.py

**test.jpg**
Image from the Graz01 set to perform small tests on.

**tst.sh**
Attempt to a shell script that runs multiple processes simultaneously, currently issues with RAM memory